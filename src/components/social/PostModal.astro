---
// src/components/social/PostModal.astro
---

<div id="post-modal" class="modal-overlay hidden">
  <div class="modal-container">
    <div class="modal-header">
      <h2 class="modal-title">Crear Publicaci√≥n</h2>
      <button class="modal-close" id="close-modal-btn" type="button">
        <svg viewBox="0 0 24 24" width="24" height="24" fill="none" stroke="currentColor" stroke-width="2">
          <line x1="18" y1="6" x2="6" y2="18"/>
          <line x1="6" y1="6" x2="18" y2="18"/>
        </svg>
      </button>
    </div>

    <form id="create-post-form" class="modal-body">
      <div class="user-info">
        <img id="modal-user-avatar" src="" alt="Avatar" class="modal-avatar" />
        <div class="user-details">
          <span id="modal-username" class="username">Usuario</span>
          <select id="post-visibility" name="visibility" class="privacy-select">
            <option value="public">üåç P√∫blico</option>
            <option value="followers">üë• Seguidores</option>
            <option value="private">üîí Privado</option>
          </select>
        </div>
      </div>

      <div class="post-input-wrapper">
        <textarea 
          id="post-caption" 
          name="caption"
          class="post-textarea" 
          placeholder="¬øQu√© est√°s pensando?"
          maxlength="2000"
          rows="6"
        ></textarea>
        <div class="char-counter">
          <span id="char-count">0</span> / 2000
        </div>
      </div>

      <div id="image-preview-container" class="media-preview"></div>

      <div class="post-actions-bar">
        <button type="button" class="action-btn" id="upload-image-btn" title="Agregar foto/video">
          <svg viewBox="0 0 24 24" width="22" height="22" fill="none" stroke="currentColor" stroke-width="2">
            <rect x="3" y="3" width="18" height="18" rx="2" ry="2"/>
            <circle cx="8.5" cy="8.5" r="1.5"/>
            <polyline points="21 15 16 10 5 21"/>
          </svg>
          <span>Foto/Video</span>
        </button>

        <button type="button" class="action-btn" id="add-emoji-btn" title="Agregar emoji">
          <svg viewBox="0 0 24 24" width="22" height="22" fill="none" stroke="currentColor" stroke-width="2">
            <circle cx="12" cy="12" r="10"/>
            <path d="M8 14s1.5 2 4 2 4-2 4-2"/>
            <line x1="9" y1="9" x2="9.01" y2="9"/>
            <line x1="15" y1="9" x2="15.01" y2="9"/>
          </svg>
          <span>Emoji</span>
        </button>

        <button type="button" class="action-btn" id="add-location-btn" title="Agregar ubicaci√≥n">
          <svg viewBox="0 0 24 24" width="22" height="22" fill="none" stroke="currentColor" stroke-width="2">
            <path d="M21 10c0 7-9 13-9 13s-9-6-9-13a9 9 0 0118 0z"/>
            <circle cx="12" cy="10" r="3"/>
          </svg>
          <span>Ubicaci√≥n</span>
        </button>

        <button type="button" class="action-btn" id="add-tags-btn" title="Agregar etiquetas">
          <svg viewBox="0 0 24 24" width="22" height="22" fill="none" stroke="currentColor" stroke-width="2">
            <path d="M20.59 13.41l-7.17 7.17a2 2 0 01-2.83 0L2 12V2h10l8.59 8.59a2 2 0 010 2.82z"/>
            <line x1="7" y1="7" x2="7.01" y2="7"/>
          </svg>
          <span>Etiquetas</span>
        </button>
      </div>

      <input 
        type="file" 
        id="post-images" 
        name="images"
        accept="image/*,video/*" 
        multiple 
        style="display: none;"
      />

      <div class="location-input hidden" id="location-input">
        <input 
          type="text" 
          id="location-text" 
          name="location"
          class="location-field" 
          placeholder="¬øD√≥nde est√°s?"
        />
        <button type="button" class="remove-location" id="remove-location">√ó</button>
      </div>

      <div class="tags-input hidden" id="tags-input">
        <div class="tags-container" id="tags-container"></div>
        <input 
          type="text" 
          id="tag-text" 
          class="tag-field" 
          placeholder="Agregar etiqueta (presiona Enter)"
        />
      </div>

      <div class="modal-footer">
        <button type="button" class="btn-cancel" id="cancel-post-btn">Cancelar</button>
        <button type="submit" class="btn-publish" id="publish-post-btn" disabled>
          <svg viewBox="0 0 24 24" width="18" height="18" fill="none" stroke="currentColor" stroke-width="2">
            <line x1="22" y1="2" x2="11" y2="13"/>
            <polygon points="22 2 15 22 11 13 2 9 22 2"/>
          </svg>
          Publicar
        </button>
      </div>
    </form>
  </div>
</div>

<script>
  const API_URL = 'http://localhost:3000';
  let selectedTags = [];

  // ============================================================
  // üîß ELEMENTOS DEL DOM
  // ============================================================
  const modal = document.getElementById('post-modal');
  const form = document.getElementById('create-post-form');
  const closeBtn = document.getElementById('close-modal-btn');
  const cancelBtn = document.getElementById('cancel-post-btn');
  const publishBtn = document.getElementById('publish-post-btn');
  const captionInput = document.getElementById('post-caption');
  const charCount = document.getElementById('char-count');
  const fileInput = document.getElementById('post-images');
  const uploadBtn = document.getElementById('upload-image-btn');
  const mediaPreview = document.getElementById('image-preview-container');
  const locationBtn = document.getElementById('add-location-btn');
  const locationInput = document.getElementById('location-input');
  const locationText = document.getElementById('location-text');
  const removeLocationBtn = document.getElementById('remove-location');
  const tagsBtn = document.getElementById('add-tags-btn');
  const tagsInputDiv = document.getElementById('tags-input');
  const tagText = document.getElementById('tag-text');
  const tagsContainer = document.getElementById('tags-container');

  // ============================================================
  // üë§ CARGAR DATOS DEL USUARIO
  // ============================================================
  async function loadModalUserData() {
    try {
      console.log('üîÑ Cargando datos para modal...');
      
      const response = await fetch(`${API_URL}/api/user/me`, {
        credentials: 'include'
      });

      if (!response.ok) throw new Error('Error cargando usuario');

      const user = await response.json();
      console.log('‚úÖ Usuario cargado para modal:', user);

      const avatarUrl = user.profilePic || 
        `https://ui-avatars.com/api/?name=${encodeURIComponent(user.username)}&background=667BC6&color=fff&size=48`;
      
      const modalAvatar = document.getElementById('modal-user-avatar');
      const modalUsername = document.getElementById('modal-username');
      
      if (modalAvatar) modalAvatar.src = avatarUrl;
      if (modalUsername) modalUsername.textContent = user.username;

    } catch (error) {
      console.error('‚ùå Error cargando usuario en modal:', error);
    }
  }

  // ============================================================
  // üéØ FUNCIONES DEL MODAL
  // ============================================================
  function openModal() {
    if (!modal) return;
    modal.classList.remove('hidden');
    document.body.style.overflow = 'hidden';
    loadModalUserData();
    console.log('‚úÖ Modal abierto');
  }

  function closeModal() {
    if (!modal) return;
    modal.classList.add('hidden');
    document.body.style.overflow = '';
    resetForm();
    console.log('‚úÖ Modal cerrado');
  }

  function resetForm() {
    if (form) form.reset();
    if (charCount) charCount.textContent = '0';
    if (mediaPreview) mediaPreview.innerHTML = '';
    if (locationInput) locationInput.classList.add('hidden');
    if (tagsInputDiv) tagsInputDiv.classList.add('hidden');
    if (tagsContainer) tagsContainer.innerHTML = '';
    if (locationText) locationText.value = '';
    selectedTags = [];
    if (publishBtn) publishBtn.disabled = true;
    console.log('üßπ Formulario reseteado');
  }

  // ============================================================
  // üìù CONTADOR DE CARACTERES
  // ============================================================
  captionInput?.addEventListener('input', (e) => {
    const length = e.target.value.length;
    if (charCount) {
      charCount.textContent = length;
      charCount.style.color = length > 1900 ? '#ef4444' : '#6b7280';
    }
    validateForm();
  });

  // ============================================================
  // ‚úÖ VALIDAR FORMULARIO
  // ============================================================
  function validateForm() {
    const hasCaption = captionInput?.value.trim().length > 0;
    const hasFiles = fileInput?.files.length > 0;
    const hasContent = hasCaption || hasFiles;
    
    if (publishBtn) {
      publishBtn.disabled = !hasContent;
    }
  }

  // ============================================================
  // üì∑ MANEJO DE IM√ÅGENES
  // ============================================================
  uploadBtn?.addEventListener('click', () => {
    fileInput?.click();
  });

  fileInput?.addEventListener('change', (e) => {
    const files = Array.from(e.target.files || []);
    
    console.log(`üì∏ ${files.length} archivos seleccionados`);

    if (files.length > 10) {
      showToast('M√°ximo 10 archivos por publicaci√≥n', 'error');
      return;
    }

    if (!mediaPreview) return;

    // Limpiar preview anterior
    mediaPreview.innerHTML = '';

    files.forEach((file, index) => {
      if (file.size > 10 * 1024 * 1024) {
        showToast(`Archivo ${file.name} muy grande (m√°x 10MB)`, 'error');
        return;
      }

      addMediaPreview(file, index);
    });

    validateForm();
  });

  function addMediaPreview(file, index) {
    const reader = new FileReader();
    
    reader.onload = (e) => {
      const preview = document.createElement('div');
      preview.className = 'media-item';
      preview.dataset.index = index;
      
      preview.innerHTML = `
        <img src="${e.target.result}" alt="Preview ${index + 1}" loading="lazy" />
        <button type="button" class="remove-media" data-index="${index}" title="Eliminar">
          <svg viewBox="0 0 24 24" width="16" height="16" fill="none" stroke="white" stroke-width="2">
            <line x1="18" y1="6" x2="6" y2="18"/>
            <line x1="6" y1="6" x2="18" y2="18"/>
          </svg>
        </button>
        <div class="media-number">${index + 1}</div>
      `;
      
      const removeBtn = preview.querySelector('.remove-media');
      removeBtn?.addEventListener('click', () => {
        removeMedia(index);
      });

      mediaPreview?.appendChild(preview);
    };

    reader.readAsDataURL(file);
  }

  function removeMedia(indexToRemove) {
    const dt = new DataTransfer();
    const files = Array.from(fileInput?.files || []);
    
    files.forEach((file, i) => {
      if (i !== indexToRemove) {
        dt.items.add(file);
      }
    });
    
    if (fileInput) fileInput.files = dt.files;
    
    // Recargar preview
    const changeEvent = new Event('change', { bubbles: true });
    fileInput?.dispatchEvent(changeEvent);
    
    console.log(`üóëÔ∏è Imagen ${indexToRemove + 1} eliminada`);
  }

  // ============================================================
  // üìç UBICACI√ìN
  // ============================================================
  locationBtn?.addEventListener('click', () => {
    locationInput?.classList.toggle('hidden');
  });

  removeLocationBtn?.addEventListener('click', () => {
    locationInput?.classList.add('hidden');
    if (locationText) locationText.value = '';
  });

  // ============================================================
  // üè∑Ô∏è ETIQUETAS
  // ============================================================
  tagsBtn?.addEventListener('click', () => {
    tagsInputDiv?.classList.toggle('hidden');
    tagText?.focus();
  });

  tagText?.addEventListener('keypress', (e) => {
    if (e.key === 'Enter') {
      e.preventDefault();
      const tag = e.target.value.trim().replace(/^#/, '');
      
      if (!tag) return;
      
      if (selectedTags.length >= 10) {
        showToast('M√°ximo 10 etiquetas', 'error');
        return;
      }

      if (!selectedTags.includes(tag)) {
        selectedTags.push(tag);
        addTagChip(tag);
        e.target.value = '';
        console.log('üè∑Ô∏è Tag agregado:', tag);
      }
    }
  });

  function addTagChip(tag) {
    const chip = document.createElement('span');
    chip.className = 'tag-chip';
    chip.dataset.tag = tag;
    
    chip.innerHTML = `
      #${tag}
      <button type="button" class="remove-tag" data-tag="${tag}">√ó</button>
    `;
    
    const removeBtn = chip.querySelector('.remove-tag');
    removeBtn?.addEventListener('click', () => {
      selectedTags = selectedTags.filter(t => t !== tag);
      chip.remove();
      console.log('üóëÔ∏è Tag removido:', tag);
    });

    tagsContainer?.appendChild(chip);
  }

  // ============================================================
  // üì§ PUBLICAR POST
  // ============================================================
  form?.addEventListener('submit', async (e) => {
    e.preventDefault();
    
    if (!publishBtn) return;
    
    publishBtn.disabled = true;
    const originalHTML = publishBtn.innerHTML;
    publishBtn.innerHTML = `
      <svg class="spinner" viewBox="0 0 24 24" width="18" height="18" fill="none" stroke="currentColor" stroke-width="2">
        <circle cx="12" cy="12" r="10" opacity="0.25"/>
        <path d="M12 2a10 10 0 0110 10" opacity="0.75"/>
      </svg>
      Publicando...
    `;

    try {
      console.log('üì§ Enviando publicaci√≥n...');

      const formData = new FormData();
      
      // Caption
      const caption = captionInput?.value.trim();
      if (caption) formData.append('caption', caption);
      
      // Visibility
      const visibility = document.getElementById('post-visibility')?.value || 'public';
      formData.append('visibility', visibility);
      
      // Images
      const files = fileInput?.files;
      if (files) {
        Array.from(files).forEach(file => {
          formData.append('images', file);
        });
      }
      
      // Location
      const location = locationText?.value.trim();
      if (location) formData.append('location', location);
      
      // Tags
      if (selectedTags.length > 0) {
        formData.append('tags', JSON.stringify(selectedTags));
      }

      // Log para debug
      console.log('üì¶ Datos a enviar:');
      for (let pair of formData.entries()) {
        console.log(`  ${pair[0]}:`, pair[1]);
      }

      const response = await fetch(`${API_URL}/api/posts`, {
        method: 'POST',
        credentials: 'include',
        body: formData
      });

      if (!response.ok) {
        const error = await response.json();
        throw new Error(error.message || 'Error al crear publicaci√≥n');
      }

      const result = await response.json();
      console.log('‚úÖ Post creado:', result);

      showToast('¬°Publicaci√≥n creada exitosamente!', 'success');
      closeModal();
      
      // Recargar feed despu√©s de 1 segundo
      setTimeout(() => {
        window.location.reload();
      }, 1000);

    } catch (error) {
      console.error('‚ùå Error al publicar:', error);
      showToast(error.message || 'Error al crear publicaci√≥n', 'error');
      
      publishBtn.disabled = false;
      publishBtn.innerHTML = originalHTML;
    }
  });

  // ============================================================
  // üé® EVENT LISTENERS
  // ============================================================
  closeBtn?.addEventListener('click', closeModal);
  cancelBtn?.addEventListener('click', closeModal);

  modal?.addEventListener('click', (e) => {
    if (e.target === modal) closeModal();
  });

  document.addEventListener('keydown', (e) => {
    if (e.key === 'Escape' && modal && !modal.classList.contains('hidden')) {
      closeModal();
    }
  });

  // ============================================================
  // üîî MOSTRAR TOAST
  // ============================================================
  function showToast(message, type = 'info') {
    const toast = document.getElementById('toast');
    const toastIcon = toast?.querySelector('.toast-icon');
    const toastMessage = toast?.querySelector('.toast-message');
    
    if (!toast || !toastIcon || !toastMessage) {
      console.log(`Toast: [${type}] ${message}`);
      return;
    }
    
    const icons = {
      success: '‚úì',
      error: '‚úï',
      info: '‚Ñπ'
    };
    
    toastIcon.textContent = icons[type] || icons.info;
    toastMessage.textContent = message;
    toast.className = `toast-notification ${type}`;
    toast.classList.remove('hidden');
    
    setTimeout(() => {
      toast.classList.add('hidden');
    }, 4000);
  }

  // ============================================================
  // üåç EXPONER FUNCI√ìN GLOBAL
  // ============================================================
  window.openPostModal = openModal;
  
  console.log('‚úÖ PostModal script cargado');
</script>

<style>
  /* ===== VARIABLES ===== */
  :root {
    --primary: #667BC6;
    --primary-dark: #5568b8;
    --secondary: #DA7297;
    --accent: #FADA7A;
    --success: #10b981;
    --error: #ef4444;
    --dark: #1f2937;
    --gray: #6b7280;
    --gray-light: #f3f4f6;
    --border: #e5e7eb;
    --white: #ffffff;
    --shadow-sm: 0 1px 3px rgba(0, 0, 0, 0.1);
    --shadow-md: 0 4px 6px rgba(0, 0, 0, 0.1);
    --shadow-lg: 0 10px 15px rgba(0, 0, 0, 0.15);
    --shadow-xl: 0 25px 50px -12px rgba(0, 0, 0, 0.4);
    --radius: 16px;
    --radius-sm: 10px;
    --transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
  }

  /* ===== MODAL OVERLAY ===== */
  .modal-overlay {
    position: fixed;
    inset: 0;
    background: linear-gradient(
      135deg,
      rgba(102, 123, 198, 0.15) 0%,
      rgba(0, 0, 0, 0.85) 100%
    );
    backdrop-filter: blur(12px) saturate(150%);
    -webkit-backdrop-filter: blur(12px) saturate(150%);
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 9999;
    padding: 20px;
    animation: overlayFadeIn 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }

  .modal-overlay.hidden {
    display: none;
  }

  @keyframes overlayFadeIn {
    from {
      opacity: 0;
      backdrop-filter: blur(0px);
    }
    to {
      opacity: 1;
      backdrop-filter: blur(12px);
    }
  }

  /* ===== MODAL CONTAINER ===== */
  .modal-container {
    background: var(--white);
    border-radius: var(--radius);
    box-shadow: var(--shadow-xl);
    max-width: 650px;
    width: 100%;
    max-height: 85vh;
    display: flex;
    flex-direction: column;
    overflow: hidden;
    position: relative;
    animation: modalSlideUp 0.4s cubic-bezier(0.34, 1.56, 0.64, 1);
    border: 1px solid rgba(255, 255, 255, 0.8);
  }

  @keyframes modalSlideUp {
    from {
      opacity: 0;
      transform: translateY(60px) scale(0.9);
    }
    to {
      opacity: 1;
      transform: translateY(0) scale(1);
    }
  }

  /* Efecto de brillo sutil */
  .modal-container::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 2px;
    background: linear-gradient(90deg, var(--primary), var(--secondary), var(--accent));
    opacity: 0.8;
  }

  /* ===== HEADER ===== */
  .modal-header {
    padding: 24px 28px 20px;
    border-bottom: 1px solid var(--border);
    display: flex;
    align-items: center;
    justify-content: space-between;
    flex-shrink: 0;
    background: linear-gradient(180deg, rgba(102, 123, 198, 0.03) 0%, transparent 100%);
  }

  .modal-title {
    font-size: 22px;
    font-weight: 700;
    color: var(--dark);
    margin: 0;
    background: linear-gradient(135deg, var(--primary) 0%, var(--secondary) 100%);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
  }

  .modal-close {
    background: var(--gray-light);
    border: 1px solid var(--border);
    width: 40px;
    height: 40px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    color: var(--gray);
    transition: var(--transition);
    position: relative;
    overflow: hidden;
  }

  .modal-close::before {
    content: '';
    position: absolute;
    inset: 0;
    background: linear-gradient(135deg, var(--primary), var(--secondary));
    opacity: 0;
    transition: opacity 0.3s;
  }

  .modal-close:hover {
    border-color: var(--primary);
    transform: rotate(90deg);
  }

  .modal-close:hover::before {
    opacity: 0.1;
  }

  .modal-close svg {
    position: relative;
    z-index: 1;
  }

  /* ===== BODY ===== */
  .modal-body {
    padding: 28px;
    overflow-y: auto;
    flex: 1;
    scrollbar-width: thin;
    scrollbar-color: var(--primary) var(--gray-light);
  }

  /* ===== USER INFO ===== */
  .user-info {
    display: flex;
    align-items: center;
    gap: 14px;
    margin-bottom: 24px;
    padding: 16px;
    background: linear-gradient(135deg, rgba(102, 123, 198, 0.05) 0%, rgba(218, 114, 151, 0.05) 100%);
    border-radius: var(--radius-sm);
    border: 1px solid rgba(102, 123, 198, 0.1);
  }

  .modal-avatar {
    width: 52px;
    height: 52px;
    border-radius: 50%;
    object-fit: cover;
    border: 3px solid var(--primary);
    flex-shrink: 0;
    box-shadow: 0 4px 12px rgba(102, 123, 198, 0.3);
  }

  .user-details {
    display: flex;
    flex-direction: column;
    gap: 6px;
    flex: 1;
  }

  .username {
    font-weight: 700;
    font-size: 16px;
    color: var(--dark);
  }

  .privacy-select {
    background: var(--white);
    border: 1px solid var(--border);
    padding: 6px 12px;
    border-radius: 8px;
    font-size: 13px;
    font-weight: 500;
    cursor: pointer;
    outline: none;
    transition: var(--transition);
    width: fit-content;
    box-shadow: var(--shadow-sm);
  }

  .privacy-select:hover {
    border-color: var(--primary);
    box-shadow: 0 0 0 3px rgba(102, 123, 198, 0.1);
  }

  .privacy-select:focus {
    border-color: var(--primary);
    box-shadow: 0 0 0 4px rgba(102, 123, 198, 0.15);
  }

  /* ===== POST INPUT ===== */
  .post-input-wrapper {
    position: relative;
    margin-bottom: 20px;
  }

  .post-textarea {
    width: 100%;
    min-height: 140px;
    max-height: 320px;
    border: 2px solid var(--border);
    border-radius: var(--radius-sm);
    padding: 18px;
    padding-bottom: 40px;
    font-size: 16px;
    font-family: inherit;
    line-height: 1.6;
    resize: vertical;
    outline: none;
    transition: var(--transition);
    background: var(--white);
  }

  .post-textarea:focus {
    border-color: var(--primary);
    box-shadow: 0 0 0 4px rgba(102, 123, 198, 0.1);
    transform: translateY(-1px);
  }

  .post-textarea::placeholder {
    color: var(--gray);
    opacity: 0.7;
  }

  .char-counter {
    position: absolute;
    bottom: 14px;
    right: 18px;
    font-size: 13px;
    color: var(--gray);
    font-weight: 600;
    pointer-events: none;
    padding: 4px 10px;
    background: var(--gray-light);
    border-radius: 12px;
    transition: var(--transition);
  }

  .char-counter.warning {
    color: var(--error);
    background: rgba(239, 68, 68, 0.1);
  }

  /* ===== MEDIA PREVIEW ===== */
  .media-preview {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
    gap: 14px;
    margin-bottom: 20px;
    padding: 16px;
    background: var(--gray-light);
    border-radius: var(--radius-sm);
    border: 2px dashed var(--border);
  }

  .media-preview:empty {
    display: none;
  }

  .media-preview:not(:empty) {
    border-style: solid;
    border-color: var(--primary);
    background: linear-gradient(135deg, rgba(102, 123, 198, 0.03) 0%, rgba(218, 114, 151, 0.03) 100%);
  }

  .media-item {
    position: relative;
    aspect-ratio: 1;
    border-radius: var(--radius-sm);
    overflow: hidden;
    background: var(--white);
    border: 2px solid var(--border);
    transition: var(--transition);
    box-shadow: var(--shadow-sm);
  }

  .media-item:hover {
    transform: scale(1.05) rotate(1deg);
    border-color: var(--primary);
    box-shadow: var(--shadow-md);
    z-index: 10;
  }

  .media-item img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    display: block;
  }

  .remove-media {
    position: absolute;
    top: 10px;
    right: 10px;
    width: 32px;
    height: 32px;
    border-radius: 50%;
    background: rgba(239, 68, 68, 0.95);
    border: 2px solid var(--white);
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: var(--transition);
    z-index: 20;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);
  }

  .remove-media:hover {
    background: var(--error);
    transform: scale(1.15) rotate(90deg);
  }

  .media-number {
    position: absolute;
    bottom: 10px;
    left: 10px;
    background: linear-gradient(135deg, var(--primary), var(--secondary));
    color: var(--white);
    padding: 6px 10px;
    border-radius: 16px;
    font-size: 12px;
    font-weight: 700;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);
    border: 2px solid var(--white);
  }

  /* ===== ACTION BUTTONS ===== */
  .post-actions-bar {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: 10px;
    margin-bottom: 20px;
  }

  .action-btn {
    background: linear-gradient(135deg, rgba(102, 123, 198, 0.08) 0%, rgba(218, 114, 151, 0.08) 100%);
    border: 2px solid var(--border);
    padding: 14px 16px;
    border-radius: var(--radius-sm);
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 10px;
    font-size: 14px;
    font-weight: 700;
    color: var(--gray);
    cursor: pointer;
    transition: var(--transition);
    position: relative;
    overflow: hidden;
  }

  .action-btn::before {
    content: '';
    position: absolute;
    inset: 0;
    background: linear-gradient(135deg, var(--primary), var(--secondary));
    opacity: 0;
    transition: opacity 0.3s;
  }

  .action-btn:hover {
    border-color: var(--primary);
    color: var(--primary);
    transform: translateY(-2px);
    box-shadow: 0 6px 16px rgba(102, 123, 198, 0.2);
  }

  .action-btn:hover::before {
    opacity: 0.1;
  }

  .action-btn svg {
    flex-shrink: 0;
    position: relative;
    z-index: 1;
  }

  .action-btn span {
    position: relative;
    z-index: 1;
  }

  /* ===== LOCATION & TAGS ===== */
  .location-input,
  .tags-input {
    margin-bottom: 20px;
    padding: 18px;
    background: linear-gradient(135deg, rgba(102, 123, 198, 0.03) 0%, rgba(218, 114, 151, 0.03) 100%);
    border-radius: var(--radius-sm);
    border: 2px solid var(--border);
    transition: var(--transition);
  }

  .location-input:hover,
  .tags-input:hover {
    border-color: var(--primary);
  }

  .location-input {
    display: flex;
    align-items: center;
    gap: 12px;
  }

  .location-field,
  .tag-field {
    flex: 1;
    background: var(--white);
    border: 2px solid var(--border);
    padding: 12px 16px;
    border-radius: 8px;
    font-size: 14px;
    font-weight: 500;
    outline: none;
    transition: var(--transition);
  }

  .location-field:focus,
  .tag-field:focus {
    border-color: var(--primary);
    box-shadow: 0 0 0 4px rgba(102, 123, 198, 0.1);
    transform: translateY(-1px);
  }

  .remove-location {
    background: var(--error);
    border: 2px solid var(--white);
    width: 40px;
    height: 40px;
    border-radius: 50%;
    font-size: 24px;
    color: var(--white);
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: var(--transition);
    flex-shrink: 0;
    box-shadow: var(--shadow-sm);
  }

  .remove-location:hover {
    background: #dc2626;
    transform: scale(1.1) rotate(90deg);
  }

  /* ===== TAGS ===== */
  .tags-container {
    display: flex;
    flex-wrap: wrap;
    gap: 10px;
    margin-bottom: 12px;
  }

  .tags-container:empty {
    margin-bottom: 0;
  }

  .tag-chip {
    background: linear-gradient(135deg, var(--primary) 0%, var(--secondary) 100%);
    color: var(--white);
    padding: 8px 14px;
    border-radius: 20px;
    font-size: 13px;
    font-weight: 700;
    display: inline-flex;
    align-items: center;
    gap: 8px;
    transition: var(--transition);
    box-shadow: 0 4px 12px rgba(102, 123, 198, 0.3);
  }

  .tag-chip:hover {
    transform: translateY(-2px) scale(1.05);
    box-shadow: 0 6px 16px rgba(102, 123, 198, 0.4);
  }

  .remove-tag {
    background: rgba(255, 255, 255, 0.25);
    border: none;
    color: var(--white);
    font-size: 18px;
    cursor: pointer;
    line-height: 1;
    padding: 0;
    width: 20px;
    height: 20px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: var(--transition);
    font-weight: 700;
  }

  .remove-tag:hover {
    background: rgba(255, 255, 255, 0.5);
    transform: rotate(90deg) scale(1.2);
  }

  /* ===== FOOTER ===== */
  .modal-footer {
    padding: 20px 28px;
    border-top: 1px solid var(--border);
    display: flex;
    justify-content: flex-end;
    gap: 12px;
    background: linear-gradient(180deg, transparent 0%, rgba(102, 123, 198, 0.03) 100%);
    flex-shrink: 0;
  }

  .btn-cancel {
    background: var(--white);
    border: 2px solid var(--border);
    padding: 12px 24px;
    border-radius: var(--radius-sm);
    font-weight: 700;
    font-size: 15px;
    color: var(--gray);
    cursor: pointer;
    transition: var(--transition);
  }

  .btn-cancel:hover {
    background: var(--gray-light);
    border-color: var(--gray);
    color: var(--dark);
    transform: translateY(-1px);
  }

  .btn-publish {
    background: linear-gradient(135deg, var(--primary) 0%, var(--secondary) 100%);
    border: none;
    padding: 12px 28px;
    border-radius: var(--radius-sm);
    font-weight: 700;
    font-size: 15px;
    color: var(--white);
    cursor: pointer;
    display: flex;
    align-items: center;
    gap: 10px;
    transition: var(--transition);
    box-shadow: 0 6px 20px rgba(102, 123, 198, 0.4);
    position: relative;
    overflow: hidden;
  }

  .btn-publish::before {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 0;
    height: 0;
    border-radius: 50%;
    background: rgba(255, 255, 255, 0.3);
    transform: translate(-50%, -50%);
    transition: width 0.6s, height 0.6s;
  }

  .btn-publish:hover:not(:disabled)::before {
    width: 300px;
    height: 300px;
  }

  .btn-publish:hover:not(:disabled) {
    transform: translateY(-3px) scale(1.02);
    box-shadow: 0 8px 24px rgba(102, 123, 198, 0.5);
  }

  .btn-publish:active:not(:disabled) {
    transform: translateY(-1px) scale(1);
  }

  .btn-publish:disabled {
    opacity: 0.6;
    cursor: not-allowed;
    box-shadow: none;
  }

  .btn-publish svg,
  .btn-publish span {
    position: relative;
    z-index: 1;
  }

  /* ===== SPINNER ===== */
  .spinner {
    animation: rotate 1s linear infinite;
  }

  @keyframes rotate {
    from { transform: rotate(0deg); }
    to { transform: rotate(360deg); }
  }

  @keyframes pulse {
    0%, 100% { opacity: 1; }
    50% { opacity: 0.6; }
  }

  .btn-publish:disabled .spinner {
    animation: rotate 1s linear infinite, pulse 2s ease-in-out infinite;
  }

  /* ===== HIDDEN ===== */
  .hidden {
    display: none !important;
  }

  /* ===== SCROLLBAR PREMIUM ===== */
  .modal-body::-webkit-scrollbar {
    width: 10px;
  }

  .modal-body::-webkit-scrollbar-track {
    background: var(--gray-light);
    border-radius: 10px;
  }

  .modal-body::-webkit-scrollbar-thumb {
    background: linear-gradient(180deg, var(--primary), var(--secondary));
    border-radius: 10px;
    border: 2px solid var(--gray-light);
  }

  .modal-body::-webkit-scrollbar-thumb:hover {
    background: linear-gradient(180deg, var(--primary-dark), var(--secondary));
  }

  /* ===== RESPONSIVE ===== */
  @media (max-width: 700px) {
    .modal-overlay {
      padding: 0;
    }

    .modal-container {
      max-height: 100vh;
      max-width: 100%;
      border-radius: 0;
      animation: modalSlideUpMobile 0.4s cubic-bezier(0.34, 1.56, 0.64, 1);
    }

    @keyframes modalSlideUpMobile {
      from {
        transform: translateY(100%);
      }
      to {
        transform: translateY(0);
      }
    }

    .modal-header,
    .modal-footer {
      padding: 18px 20px;
    }

    .modal-body {
      padding: 24px 20px;
    }

    .post-actions-bar {
      grid-template-columns: 1fr;
    }

    .action-btn {
      padding: 16px;
    }

    .action-btn span {
      display: inline;
    }

    .media-preview {
      grid-template-columns: repeat(auto-fill, minmax(110px, 1fr));
      gap: 10px;
      padding: 12px;
    }

    .user-info {
      padding: 14px;
    }

    .modal-avatar {
      width: 48px;
      height: 48px;
    }
  }

  /* ===== DARK MODE ===== */
  @media (prefers-color-scheme: dark) {
    .modal-container {
      background: #1f2937;
      border-color: #374151;
    }

    .modal-header,
    .modal-footer {
      background: #111827;
      border-color: #374151;
    }

    .modal-title,
    .username {
      color: #f9fafb;
    }

    .post-textarea,
    .location-field,
    .tag-field,
    .privacy-select {
      background: #111827;
      border-color: #374151;
      color: #f9fafb;
    }

    .action-btn,
    .user-info,
    .location-input,
    .tags-input {
      background: #111827;
      border-color: #374151;
    }

    .btn-cancel {
      background: #1f2937;
      border-color: #374151;
      color: #9ca3af;
    }

    .btn-cancel:hover {
      background: #374151;
      color: #f9fafb;
    }

    .media-preview {
      background: #111827;
      border-color: #374151;
    }

    .media-item {
      background: #1f2937;
      border-color: #374151;
    }
  }

  /* ===== FOCUS VISIBLE (Accesibilidad) ===== */
  *:focus-visible {
    outline: 3px solid rgba(102, 123, 198, 0.5);
    outline-offset: 3px;
  }

  /* ===== TRANSICIONES GLOBALES ===== */
  * {
    transition-property: background-color, border-color, color, transform, box-shadow, opacity;
    transition-duration: 0.2s;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  }

</style>
