---
import Layout from "../layouts/Layout.astro";
---

<Layout title="Food Explorer üç≤">
  <section class="min-h-screen bg-gradient-to-br from-[#0f0c29] via-[#302b63] to-[#24243e] text-white px-6 py-20 flex flex-col items-center">
    <!-- üîπ Header -->
    <div class="text-center mb-10">
      <h1 class="text-4xl font-bold text-pink-400 drop-shadow-lg">Descubre recetas deliciosas</h1>
      <p class="text-gray-300 mt-3 max-w-xl">
        Busca por nombre, tipo o ingredientes y deja que <strong>Roy</strong> te inspire con opciones saludables y futuristas üå±
      </p>
    </div>

    <!-- üîπ Buscador -->
    <div class="flex justify-center w-full mb-8">
      <input
        id="foodSearch"
        type="text"
        placeholder="Ejemplo: pasta, pollo, ensalada..."
        class="w-11/12 sm:w-2/3 md:w-1/2 p-3 rounded-xl bg-white/10 text-center placeholder-gray-400 outline-none focus:ring-2 focus:ring-pink-500 transition"
        onkeydown="if(event.key === 'Enter') buscarRecetas()"
      />
    </div>

    <!-- üîπ T√≠tulo para recetas aleatorias -->
    <h2 id="randomTitle" class="text-2xl font-semibold mb-6 text-purple-400">‚ú® Recomendaciones de hoy</h2>

    <!-- üîπ Resultados -->
    <div id="recipesResults" class="grid sm:grid-cols-2 md:grid-cols-3 gap-6 w-full max-w-6xl"></div>
  </section>

  <script is:inline>
    const API_KEY = "0cb308270e0c4ee584f7c0c82e415d35";
    const API_URL = "https://api.spoonacular.com/recipes";
    const recipesDiv = document.getElementById("recipesResults");
    const title = document.getElementById("randomTitle");

    // üîπ Cargar recetas aleatorias al iniciar
    window.addEventListener("DOMContentLoaded", cargarRecetasAleatorias);

    async function cargarRecetasAleatorias() {
      title.textContent = "‚ú® Recomendaciones de hoy";
      recipesDiv.innerHTML = "<p class='text-gray-400 text-center col-span-3'>Cargando recetas aleatorias...</p>";

      try {
        const res = await fetch(`${API_URL}/random?number=9&apiKey=${API_KEY}`);
        const data = await res.json();

        if (!data.recipes || data.recipes.length === 0) {
          recipesDiv.innerHTML = "<p class='text-gray-400 text-center col-span-3'>No hay recetas disponibles.</p>";
          return;
        }

        renderizarRecetas(data.recipes);
      } catch (error) {
        console.error("Error al cargar recetas aleatorias:", error);
        recipesDiv.innerHTML = "<p class='text-red-400 text-center col-span-3'>Error al cargar recetas.</p>";
      }
    }

    // üîπ Buscar recetas por nombre
    async function buscarRecetas() {
      const query = document.getElementById("foodSearch").value.trim();
      if (!query) return;

      title.textContent = `üîç Resultados para "${query}"`;
      recipesDiv.innerHTML = "<p class='text-gray-400 text-center col-span-3'>Buscando recetas...</p>";

      try {
        const res = await fetch(
          `${API_URL}/complexSearch?query=${encodeURIComponent(query)}&number=9&addRecipeInformation=true&apiKey=${API_KEY}`
        );
        const data = await res.json();

        if (!data.results || data.results.length === 0) {
          recipesDiv.innerHTML = "<p class='text-gray-400 text-center col-span-3'>‚ùå No se encontraron recetas.</p>";
          return;
        }

        renderizarRecetas(data.results);
      } catch (error) {
        console.error("Error al buscar recetas:", error);
        recipesDiv.innerHTML = "<p class='text-red-400 text-center col-span-3'>Error al buscar recetas.</p>";
      }
    }

    // üîπ Renderizar lista de recetas (aleatorias o buscadas)
    function renderizarRecetas(lista) {
      recipesDiv.innerHTML = lista.map(r => `
        <div class="bg-white/10 p-4 rounded-xl backdrop-blur-md hover:bg-white/20 transition cursor-pointer flex flex-col justify-between">
          <img src="${r.image}" alt="${r.title}" class="rounded-lg w-full h-48 object-cover mb-3 shadow-md shadow-pink-500/20"/>
          <div>
            <h3 class="text-xl font-semibold mb-1">${r.title}</h3>
            <p class="text-gray-300 text-sm mb-3">Listo en ${r.readyInMinutes || '?'} min ‚Ä¢ ${r.servings || '?'} porciones</p>
            <a href="/Recipe/${r.id}" class="text-pink-400 hover:underline text-sm">Ver detalles ‚Üí</a>
          </div>
        </div>
      `).join("");
    }
  </script>
</Layout>



