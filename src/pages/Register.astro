---
import Layout from "../layouts/Layout.astro";
---

<Layout title="Login">
  <div class="login-container">
    <h1 class="text-pretty text-3xl font-semibold">Welcome to FaceIA</h1>
    <p>Please login to your account to continue exploring the future of IA</p>

    <form id="loginForm">
      <label for="email">Email:</label>
      <input type="email" id="email" name="email" required />

      <label for="password">Password:</label>
      <input type="password" id="password" name="password" required />

      <div class="login-options">
        <label>
          <input type="checkbox" id="rememberMe" name="rememberMe" />
          Remember me
        </label>
      </div>

      <button type="submit">Login</button>

      <p id="statusMessage" class="error-message"></p>

      <div class="form-links">
        <a href="/forgot-password">Forgot password?</a>
        <a href="/sign-up">Sign up</a>
      </div>
    </form>
  </div>

  <script>
    document.addEventListener('DOMContentLoaded', () => {
      const form = document.getElementById('loginForm');
      const statusMessage = document.getElementById('statusMessage');

      form.addEventListener('submit', async (event) => {
        event.preventDefault();

        const email = document.getElementById('email').value.trim();
        const password = document.getElementById('password').value.trim();

        if (!email || !password) {
          statusMessage.textContent = 'Please enter both email and password.';
          return;
        }

        try {
          const response = await fetch('http://localhost:3000/login', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ email, password }),
            credentials: 'include', // Permite mantener la sesión
          });

          const data = await response.json();

          if (response.ok) {
            statusMessage.style.color = 'lightgreen';
            statusMessage.textContent = '✅ Login successful. Redirecting...';
            setTimeout(() => {
              window.location.href = data.redirectUrl || '/Profile';
            }, 1000);
          } else {
            statusMessage.style.color = 'red';
            statusMessage.textContent = `❌ ${data.message || 'Invalid credentials.'}`;
          }
        } catch (error) {
          console.error('Error:', error);
          statusMessage.style.color = 'red';
          statusMessage.textContent = '❌ Connection error. Please try again.';
        }
      });
    });
  </script>

  <style>
    .error-message {
      color: rgb(255, 255, 255);
      text-align: center;
      margin-top: 10px;
    }

    .login-container {
      max-width: 600px;
      margin: auto;
      padding: 20px;
      border: 1px solid #ccc;
      border-radius: 10px;
      box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
      margin-top: 200px;
    }

    h1 {
      text-align: center;
      margin-bottom: 10px;
      color: #ffffff;
    }

    p {
      text-align: center;
      margin-bottom: 20px;
      color: #ccc;
    }

    form {
      display: flex;
      flex-direction: column;
    }

    label {
      margin-bottom: 5px;
      font-weight: bold;
      color: #ffffff;
    }

    input {
      margin-bottom: 10px;
      padding: 8px;
      font-size: 16px;
      border: 1px solid #ddd;
      border-radius: 5px;
    }

    .login-options {
      margin-bottom: 10px;
      color: #fff;
    }

    button {
      padding: 10px;
      font-size: 16px;
      border: none;
      border-radius: 5px;
      background-color: #00aa41;
      color: white;
      cursor: pointer;
      margin-bottom: 10px;
    }

    button:hover {
      background-color: #2d5e00;
    }

    .form-links {
      text-align: center;
    }

    .form-links a {
      margin: 0 10px;
      color: #ffffff;
      text-decoration: none;
    }

    .form-links a:hover {
      text-decoration: underline;
    }
  </style>
</Layout>
